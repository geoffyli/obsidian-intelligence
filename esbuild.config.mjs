import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import { sassPlugin } from "esbuild-sass-plugin";
import postcss from "postcss";
import tailwindcss from "@tailwindcss/postcss";
import autoprefixer from "autoprefixer";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
	minify: prod,
	plugins: [
		sassPlugin({
			type: "css-text",
			filter: /\.scss$/,
		})
	],
});

// Build SCSS separately to generate styles.css with Tailwind processing
const cssContext = await esbuild.context({
	entryPoints: ["src/styles/main.scss"],
	bundle: true,
	outfile: "styles.css",
	plugins: [
		sassPlugin({
			type: "css",
			filter: /\.scss$/,
			async transform(source, dir) {
				const { css } = await postcss([
					tailwindcss,
					autoprefixer
				]).process(source, { from: undefined });
				return css;
			}
		})
	],
	logLevel: "info",
	minify: prod,
});

if (prod) {
	await context.rebuild();
	await cssContext.rebuild();
	process.exit(0);
} else {
	await context.watch();
	await cssContext.watch();
}
